FROM node:18-alpine AS builder

# Define build arguments
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_POCKETBASE_URL
ARG NEXT_PUBLIC_SEARCH_URL
ARG NEXT_PUBLIC_MEILI_URL

WORKDIR /app

# Set environment variables for build time
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_POCKETBASE_URL=${NEXT_PUBLIC_POCKETBASE_URL}
ENV NEXT_PUBLIC_SEARCH_URL=${NEXT_PUBLIC_SEARCH_URL}
ENV NEXT_PUBLIC_MEILI_URL=${NEXT_PUBLIC_MEILI_URL}

# Install dependencies
COPY package.json package-lock.json ./
RUN npm ci

# Copy application code
COPY . .

# Build the application
RUN npm run build

# Production image
FROM node:18-alpine AS runner
WORKDIR /app

ENV NODE_ENV production

# Pass build arguments to runtime environment variables
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_POCKETBASE_URL
ARG NEXT_PUBLIC_SEARCH_URL
ARG NEXT_PUBLIC_MEILI_URL

ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_POCKETBASE_URL=${NEXT_PUBLIC_POCKETBASE_URL}
ENV NEXT_PUBLIC_SEARCH_URL=${NEXT_PUBLIC_SEARCH_URL}
ENV NEXT_PUBLIC_MEILI_URL=${NEXT_PUBLIC_MEILI_URL}

# Add non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy only necessary files from builder stage
COPY --from=builder /app/next.config.ts ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json

# Copy the built application
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Set the correct permissions
USER nextjs

# Expose the port the app runs on
EXPOSE 3000

# Command to run the application in production mode
CMD ["node", "server.js"]
